services:
  app:
    image: ghcr.io/lbr88/chronohancer:latest
    # Uncomment below and comment out image above to build locally
    # build:
    #   context: .
    #   dockerfile: docker/Dockerfile
    # image: chronohancer-app
    container_name: chronohancer-app
    restart: unless-stopped
    volumes:
      - ./storage:/var/www/html/storage
    depends_on:
      - mysql
    networks:
      - chronohancer
    ports:
      - "9000"
    env_file:
      - .env
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: chronohancer
      DB_USERNAME: chronohancer
      DB_PASSWORD: secret
      REDIS_HOST: valkey
      REDIS_PORT: 6379

  nginx:
    image: nginx:alpine
    container_name: chronohancer-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
    environment:
      NGINX_CONFIG: |
        upstream php-fpm {
            server app:9000;
        }

        server {
            listen 80;
            server_name _;
            root /var/www/html/public;
            index index.php;

            location / {
                try_files $$uri $$uri/ /index.php?$$query_string;
            }

            location ~ \.php$$ {
                fastcgi_pass php-fpm;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $$document_root$$fastcgi_script_name;
                include fastcgi_params;
            }

            location ~ /\.(?!well-known).* {
                deny all;
            }
        }
    command: >
      /bin/sh -c "echo \"$$NGINX_CONFIG\" > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - app
    networks:
      - chronohancer

  mysql:
    image: mysql:8.0
    container_name: chronohancer-mysql
    restart: unless-stopped
    ports:
      - "3306"
    environment:
      MYSQL_DATABASE: chronohancer
      MYSQL_USER: chronohancer
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_NAME: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - chronohancer

  valkey:
    image: valkey/valkey:latest
    container_name: chronohancer-valkey
    restart: unless-stopped
    ports:
      - "6379"
    networks:
      - chronohancer

  watchtower:
    image: containrrr/watchtower
    container_name: chronohancer-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --cleanup --monitor-only chronohancer-app
    networks:
      - chronohancer

networks:
  chronohancer:
    driver: bridge

volumes:
  mysql-data:
    driver: local